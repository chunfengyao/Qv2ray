name: Qv2ray build matrix - cmake

on:
  push:
    branches: [l10n_dev, dev]
  release:
    types: [prereleased]
  workflow_dispatch:

jobs:
  check_commit_msg:
    outputs:
      commit_message: ${{ steps.get_message.outputs.message }}
    name: Check if the workflow has been disabled.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get commit message
        id: get_message
        run: |
          echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.event.after }} | tr '\n' ' ')"
          echo "message=\"$(git log --format=%B -n 1 ${{ github.event.after }} | tr '\n' ' ')\"" >> $GITHUB_ENV
  build:
    needs: check_commit_msg
    if: ${{ !contains( needs.check_commit_msg.outputs.commit_message, '!QT5') }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64,arm64]
        build_type: [RelWithDebInfo, Release]
        qt_version: [5.15.0]
        include:
          - platform: windows-latest
            arch: x64
            qtarch: win64_msvc2019_64
      fail-fast: false

    runs-on: ${{ matrix.platform }}
    env:
      _QV2RAY_BUILD_INFO_: "Qv2ray built from Github Action"
      _QV2RAY_BUILD_EXTRA_INFO_: "qt${{ matrix.qt_version }}-${{ github.sha }}-ci.${{ matrix.platform }}"
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Get the version
        id: get_version
        shell: bash
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Checking out sources
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Install Python 3.7 version
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"
          architecture: "x64"
#          architecture: ${{ matrix.arch }}
      # =========================================================================================================
      - name: Linux - ${{ matrix.qt_version }} - Build preparation - Install Packages
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo add-apt-repository ppa:ondrej/nginx
          sudo apt update
          sudo apt install -y libgl-dev libx11-dev libxkbcommon-x11-dev libxcb-image0-dev libxcb-icccm4-dev libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 \
              libprotobuf-dev protobuf-compiler protobuf-c-compiler libgrpc++-dev protobuf-compiler-grpc \
              ninja-build \
              fcitx-frontend-qt5 \
              libcurl4-openssl-dev libssl-dev
